// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using matchlove.Models;

#nullable disable

namespace matchlove.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231022021955_M08-CreateTablesDasPreferecias4")]
    partial class M08CreateTablesDasPreferecias4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("matchlove.Models.Denuncia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Denunciado")
                        .HasColumnType("int");

                    b.Property<int>("Denunciante")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConteudo")
                        .HasColumnType("int");

                    b.Property<int>("Motivo")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Denuncia");
                });

            modelBuilder.Entity("matchlove.Models.Filme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("matchlove.Models.Hobby", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("matchlove.Models.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FilmeId")
                        .HasColumnType("int");

                    b.Property<int?>("HobbyId")
                        .HasColumnType("int");

                    b.Property<int?>("MusicaId")
                        .HasColumnType("int");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoInfo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId")
                        .IsUnique()
                        .HasFilter("[FilmeId] IS NOT NULL");

                    b.HasIndex("HobbyId")
                        .IsUnique()
                        .HasFilter("[HobbyId] IS NOT NULL");

                    b.HasIndex("MusicaId")
                        .IsUnique()
                        .HasFilter("[MusicaId] IS NOT NULL");

                    b.HasIndex("PessoaId")
                        .HasDatabaseName("IX_Infos_PessoaId_Custom");

                    b.ToTable("Infos");
                });

            modelBuilder.Entity("matchlove.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Login");
                });

            modelBuilder.Entity("matchlove.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Pessoa1")
                        .HasColumnType("int");

                    b.Property<int>("Pessoa2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dataMatch")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("matchlove.Models.Musica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("artista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Musicas");
                });

            modelBuilder.Entity("matchlove.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("DenunciaId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoPerfil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrientacaoSexual")
                        .HasColumnType("int");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DenunciaId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("matchlove.Models.Info", b =>
                {
                    b.HasOne("matchlove.Models.Filme", "Filme")
                        .WithOne()
                        .HasForeignKey("matchlove.Models.Info", "FilmeId");

                    b.HasOne("matchlove.Models.Hobby", "Hobby")
                        .WithOne()
                        .HasForeignKey("matchlove.Models.Info", "HobbyId");

                    b.HasOne("matchlove.Models.Musica", "Musica")
                        .WithOne()
                        .HasForeignKey("matchlove.Models.Info", "MusicaId");

                    b.HasOne("matchlove.Models.Pessoa", "Pessoa")
                        .WithMany("Infos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Hobby");

                    b.Navigation("Musica");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("matchlove.Models.Login", b =>
                {
                    b.HasOne("matchlove.Models.Pessoa", "Pessoa")
                        .WithOne("Login")
                        .HasForeignKey("matchlove.Models.Login", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("matchlove.Models.Pessoa", b =>
                {
                    b.HasOne("matchlove.Models.Denuncia", null)
                        .WithMany("Pessoas")
                        .HasForeignKey("DenunciaId");
                });

            modelBuilder.Entity("matchlove.Models.Denuncia", b =>
                {
                    b.Navigation("Pessoas");
                });

            modelBuilder.Entity("matchlove.Models.Pessoa", b =>
                {
                    b.Navigation("Infos");

                    b.Navigation("Login");
                });
#pragma warning restore 612, 618
        }
    }
}
