// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using matchlove.Models;

#nullable disable

namespace matchlove.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

<<<<<<< HEAD
            modelBuilder.Entity("matchlove.Models.Login", b =>
=======
            modelBuilder.Entity("matchlove.Models.Curtida", b =>
>>>>>>> 73aae586d67bb84c5e649d07c7647326d65710e7
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

<<<<<<< HEAD
                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PessoaId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Login");
=======
                    b.Property<bool>("DeuMatch")
                        .HasColumnType("bit");

                    b.Property<int>("IdDestinatario")
                        .HasColumnType("int");

                    b.Property<int>("IdRemetente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Curtidas");
                });

            modelBuilder.Entity("matchlove.Models.Denuncia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Denunciado")
                        .HasColumnType("int");

                    b.Property<int>("Denunciante")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdConteudo")
                        .HasColumnType("int");

                    b.Property<int>("Motivo")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Denuncia");
                });

            modelBuilder.Entity("matchlove.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Pessoa1")
                        .HasColumnType("int");

                    b.Property<int>("Pessoa2")
                        .HasColumnType("int");

                    b.Property<DateTime?>("dataMatch")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Match");
>>>>>>> 73aae586d67bb84c5e649d07c7647326d65710e7
                });

            modelBuilder.Entity("matchlove.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("DenunciaId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrientacaoSexual")
                        .HasColumnType("int");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DenunciaId");

                    b.ToTable("Pessoas");
                });

<<<<<<< HEAD
            modelBuilder.Entity("matchlove.Models.Login", b =>
                {
                    b.HasOne("matchlove.Models.Pessoa", "Pessoa")
                        .WithOne("Login")
                        .HasForeignKey("matchlove.Models.Login", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("matchlove.Models.Pessoa", b =>
                {
                    b.Navigation("Login");
=======
            modelBuilder.Entity("matchlove.Models.Pessoa", b =>
                {
                    b.HasOne("matchlove.Models.Denuncia", null)
                        .WithMany("Pessoas")
                        .HasForeignKey("DenunciaId");
                });

            modelBuilder.Entity("matchlove.Models.Denuncia", b =>
                {
                    b.Navigation("Pessoas");
>>>>>>> 73aae586d67bb84c5e649d07c7647326d65710e7
                });
#pragma warning restore 612, 618
        }
    }
}
